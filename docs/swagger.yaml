basePath: /
definitions:
  models.DeleteResult:
    properties:
      deletedCount:
        description: The number of documents deleted.
        type: integer
    type: object
  models.ErrorResponse:
    properties:
      status:
        type: string
    type: object
  models.InsertOneResult:
    properties:
      insertedID:
        description: The _id of the inserted document. A value generated by the driver will be of type primitive.ObjectID.
        type: object
    type: object
  models.UpdateResult:
    properties:
      matchedCount:
        description: The number of documents matched by the filter.
        type: integer
      modifiedCount:
        description: The number of documents modified by the operation.
        type: integer
      upsertedCount:
        description: The number of documents upserted by the operation.
        type: integer
      upsertedID:
        description: The _id field of the upserted document, or nil if no upsert was done.
        type: object
    type: object
  models.User:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      email:
        type: string
      name:
        type: string
      user_id:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    name: Sw-Saturn
  description: MiCasaのAPIドキュメント
  license:
    name: MIT License
    url: https://github.com/MiCasa-IoT/MainAPI/blob/master/LICENSE
  title: MiCasa Main API
  version: "1.0"
paths:
  /api/v1/db/document/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: User
        in: body
        name: create
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.InsertOneResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: 新規のドキュメントを作成する
  /api/v1/db/document/delete:
    delete:
      consumes:
      - application/json
      parameters:
      - description: UserID
        in: body
        name: delete
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.DeleteResult'
        "400":
          description: User Not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: 既存のドキュメントを削除する
  /api/v1/db/document/read:
    post:
      consumes:
      - application/json
      parameters:
      - description: UserID
        in: body
        name: read
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: 指定したIDのドキュメントを取得する
  /api/v1/db/document/readall:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: 全てのドキュメントを取得する
  /api/v1/db/document/update:
    post:
      consumes:
      - application/json
      parameters:
      - description: UserID
        in: body
        name: read
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.UpdateResult'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: 既存のドキュメントを更新する
swagger: "2.0"
